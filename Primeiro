#include <iostream>
#include <ctime>

using namespace std;

struct no {
    int info;
    int prior;
    no *link;
};

no *inicializaFP(no *L){
    L = NULL;
    return L;
}

no *insereFP(no *L, int valor, int prior){
    no *N, *P, *ANT;

    N = new no;
    N->info = valor;
    N->prior = prior;

    if (L == NULL) {
        L = N;
        N->link = NULL;
    }
    else {
        P = L;

        while ((P != NULL) && (prior >= P->prior)) {
            ANT = P;
            P = P->link;
        }
        if (P == L) {
            N->link = L;
            L = N;
        }
        else {
            ANT->link = N;
            N->link = P;
        }
    }
    return L;
}

no *removeFP(no *L, int *n, int * prior) {
	no *AUX;

	if (L != NULL) {
		*n = L->info;
		*prior = L->prior; 
		AUX = L;
		L = L->link;
		delete AUX;
	}
	return L;
}

int verificaSeVazia(no *L) {
	if (L == NULL)
		return 1;
	else
		return 0;
}

void exibe(no *L){
    no *P = L;
    while (P != NULL) {
		cout << endl << "Prioridade do Voo: " << P->prior << " Numero do Voo: " << P->info;
        P = P->link;
    }
}//houve alteração


void PreencheVoos(no *Voos, int Vetor[]){
    int priori;
    int i = 1;

    unsigned seed = time(NULL);
    srand(seed);
        
    while(Vetor[i] != Vetor[50]){
        priori = rand() % 4;
        Voos = insereFP(Voos, Vetor[i], priori);
        i++;
    }
}

int main(){
    no *P1, *P2, *P3, *Voos;
    int voos, prior;
    int Vetor[50];
    P1 = inicializaFP(P1);
    P2 = inicializaFP(P2);
    P3 = inicializaFP(P3);
    Voos = inicializaFP(Voos);

    Voos = insereFP(Voos, 0, 1);

    for(int i = 1; i <= 50; i++){
        Vetor[i] = i;
    }

    cout << "Digite quantos voos deseja realizar (entre 1 e 50): " << endl;
    cin >> voos;

    for(int i = 1; i <= voos; i++){
        cout << endl << "Voo " << i << endl;

        cout << "Digite a prioridade do voo: " << endl;
        cout << "1 - pouso de prioridade alta" << endl;
        cout << "2 - pouso de prioridade normal" << endl;
        cout << "3 - decolagem" << endl;
        cin >> prior;

        Voos = insereFP(Voos, i, prior);
        Vetor[i] = NULL;
    }

    if(voos < 50){
        PreencheVoos(Voos, Vetor);
    }

    exibe(Voos);
}
