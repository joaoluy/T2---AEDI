#include <iostream>
#include <ctime>

using namespace std;

struct no {
    int info;
    int prior;
    no *link;
};

no *inicializaFP(no *L){
    L = NULL;
    return L;
}

no *insereFP(no *L, int valor, int prior){
    no *N, *P, *ANT;

    N = new no;
    N->info = valor;
    N->prior = prior;

    if (L == NULL) {
        L = N;
        N->link = NULL;
    }
    else {
        P = L;

        while ((P != NULL) && (prior >= P->prior)) {
            ANT = P;
            P = P->link;
        }
        if (P == L) {
            N->link = L;
            L = N;
        }
        else {
            ANT->link = N;
            N->link = P;
        }
    }
    return L;
}

no *removeFP(no *L, int *n, int * prior) {
	no *AUX;

	if (L != NULL) {
		*n = L->info;
		*prior = L->prior; 
		AUX = L;
		L = L->link;
		delete AUX;
	}
	return L;
}

int verificaSeVazia(no *L) {
	if (L == NULL)
		return 1;
	else
		return 0;
}

void exibe(no *L){
    no *P = L;
    while (P != NULL) {
		cout << endl << "Prioridade do Voo: " << P->prior << " Numero do Voo: " << P->info;
        P = P->link;
    }
}//houve alteração


int main(){
    no *Voos, *PD;
    int voos, *prior, *num, continua = 1, ut;
    int aux1, aux2;
    Voos = inicializaFP(Voos);
    
    unsigned seed = time(NULL);
    srand(seed);

    for(int i = 1; i <= 50; i++){
        num[i] = i;
        prior[i] = rand() % 4;
        Voos = insereFP(Voos, num[i], prior[i]);
    }
    
	for(ut=1; continua ; ut++){
		
		cout << endl << "**************************" << endl;
		cout << endl << "***** UNIDADE DE TEMPO: "<< ut << "*****" << endl;
		for (voos=1; voos<=3; voos++){
		    for(int i = 0; i<50; i++){
    			if (!verificaSeVazia(Voos)){
				    Voos = removeFP(Voos, &aux1, &aux2);
				    PD=insereFP(PD, aux1, aux2);
			    }   
		    }
		}
		cout << "FILA DE VOOS A SEREM ATENDIDOS: ";
		exibe(PD);
		
		if ((ut%2)&&(continua)){
			for (int i=1; i<=3;i++){
				if (PD != NULL){
					PD=removeFP(PD, &aux1, &aux2);
					cout << endl << "PISTA " << i << " atendendo o voo " << data;
				}
				else{
					cout << endl << "TODOS OS VOOS FORAM ATENDIDOS - FILA VAZIA";
					continua = 0;
				}
			}
			if (!verificaSeVazia(FP)){
					cout << endl << "FILA DE VOOS A SEREM ATENDIDOS: ";
			        exibe(PD);
			}
		}
		else{
			cout << endl << "PISTAS EM ATENDIMENTO";
		}
	}

    exibe(Voos);
}
